/**
	Parses the parameters from url to json:
	
	domain/path?param_1=value_1&param_2=value_2&param_3=value_3&...&param_n=value_n
	
	{
		param_1: value_1
	,	param_2: value_2
	,	param_3: value_3
	...
	,	param_n: value_n
	}
	
	
	Use like this:
	
	> urlParams.register(the_url)
	// returns: /the_url?params/
	
	and now:
	
	> urlParams(the_url)
	// returns: appropriate middleware function that sets
	// req.body.urlParams = parsedJson
*/

module.exports = (function(){
	var my
		,	reg = [];

	function addParamsToURL(str){
		str.replace("/", "\\\/");
		return RegExp("^" + str + "?([^\/]*)$")
	}

	function parseGetJSON(str){
		var i
			,	json = {};

		if(str[0] === "?"){
			str = str.slice(1);
		}
		str = str.split("&");
		
		for(i = 0; i < str.length; ++i){
			str[i] = str[i].split("=");
			json[str[i][0]] = str[i][1]
		}
		return json;
	}

	function parseURLjson(str){
		str = reg[str].regExp;
		return function(req, res, next){
			req.body.urlParams = parseGetJSON(str.exec(unescape(req.url))[1]);
			next();
		};
	}
	
	my = function(str){
		if(reg[str]){
			return reg[str].func;
		}
		return function defaultFunc(req, res, next){
			console.log(str + " is not registered! Passing control");
			next();
		};
	}
	
	my.register = function(str){
		reg[str] = {
			regExp: addParamsToURL(str)
		};
		reg[str].func = parseURLjson(str);

		return reg[str].regExp;
	};
	
	return my;
})();